openapi: 3.0.0
info:
  title: Book API
  version: 1.0.0
  description: API for managing books and authors
paths:
  /books:
    get:
      tags:
        - Books
      summary: Get all books
      description: Get all books with pagination
      parameters:
        - name: page
          in: query
          required: false
          description: Page number to retrieve (defaults to 1)
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: Number of books per page (defaults to 10)
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
    post:
      tags:
        - Books
      summary: Create a new book
      description: Create a new book and add it to the database
      requestBody:
        description: Book object to create
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title of the book (required, minimum length 2, maximum length 100)
                  example: "The Lord of the Rings"
                author:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Author's name (required, minimum length 2, maximum length 50)
                      example: "John Doe"
                    country:
                      type: string
                      description: Author's country of origin (required, minimum length 2, maximum length 50)
                      example: "USA"
                    birthDate:
                      type: string
                      format: date
                      description: Author's birth date (required, in ISO 8601 format, cannot be in the future)
                      example: "1980-01-01"
                price:
                  type: number
                  format: float
                  description: Price of the book (required, minimum 0)
                  example: 19.99
                isbn:
                  type: string
                  description: ISBN of the book (must be a valid ISBN-10 or ISBN-13)
                  example: "9780618260274"
                language:
                  type: string
                  description: Language of the book (required, minimum length 2, maximum length 100)
                  example: "English"
                numberOfPages:
                  type: integer
                  description: Number of pages in the book (required minimum 1)
                  example: 300
                publisher:
                  type: string
                  description: Publisher of the book (required, minimum length 2, maximum length 100)
                  example: "Allen & Unwin"
      responses:
        "201":
          description: Book created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  status:
                    type: integer
                    example: 400
  /books/{id}:
    put:
      tags:
        - Books
      summary: Update a book
      description: Update a book by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the book to update
          schema:
            type: string
      requestBody:
        description: Book object with updated fields
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title of the book
                author:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Author's name
                    country:
                      type: string
                      description: Author's country of origin
                    birthDate:
                      type: string
                      format: date
                      description: Author's birth date
                price:
                  type: number
                  format: float
                  description: Price of the book (minimum 0)
                isbn:
                  type: string
                  description: ISBN of the book (must be a valid ISBN-10 or ISBN-13)
                language:
                  type: string
                  description: Language of the book (required, minimum length 2, maximum length 100)
                numberOfPages:
                  type: integer
                  description: Number of pages in the book (required minimum 1)
                  example: 300
                publisher:
                  type: string
                  description: Publisher of the book
      responses:
        "200":
          description: Book updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "404":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    example: "A book with this title already exists."
                  status:
                    type: integer
                    example: 400
    delete:
      tags:
        - Books
      summary: Delete a book
      description: Delete a book by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the book to delete
          schema:
            type: string
      responses:
        "200":
          description: Book deleted successfully
components:
  schemas:
    Author:
      type: object
      properties:
        _id:
          type: string
          description: Unique identifier of the author
          example: "66f587fb9235e6937f482b5c"
        name:
          type: string
          description: Author's name (required, minimum length 2, maximum length 50, only letters and spaces)
          example: "John Doe"
        country:
          type: string
          description: Author's country of origin (required, minimum length 2, maximum length 50)
          example: "USA"
        birthDate:
          type: string
          format: date
          description: Author's birth date (required, in ISO 8601 format, cannot be in the future)
          example: "1980-01-01"
    Book:
      type: object
      properties:
        _id:
          type: string
          description: Unique identifier of the book
          example: "32f587fb2355e6937f482a1d"
        title:
          type: string
          description: Title of the book (required, minimum length 2, maximum length 100)
          example: "The Lord of the Rings"
        author:
          $ref: "#/components/schemas/Author"
        price:
          type: number
          format: float
          description: Price of the book (required, minimum 0)
          example: 19.99
        isbn:
          type: string
          description: ISBN of the book (must be a valid ISBN-10 or ISBN-13)
          example: "9780618260274"
        language:
          type: string
          description: Language of the book (required, minimum length 2, maximum length 100)
          example: "English"
        numberOfPages:
          type: integer
          description: Number of pages in the book (required, minimum 1)
          example: 300
        publisher:
          type: string
          description: Publisher of the book (required, minimum length 2, maximum length 100)
          example: "Allen & Unwin"
